import { ApolloClient, InMemoryCache } from "@apollo/client";
import { useEffect, useState } from "react";
import Head from "next/head";
import Link from "next/link";
import InfiniteScroll from "react-infinite-scroll-component";
import { GET_ALL_POSTS } from "../graphql/queries";

export default function Home() {
  const [posts, setPosts] = useState([]);
  const [hasMore, setHasMore] = useState(true);
  const [page, setPage] = useState(1);

  useEffect(() => {
    fetchPosts();
  }, []);

  async function fetchPosts() {
    const client = new ApolloClient({
      uri: "http://localhost:1337/graphql",
      cache: new InMemoryCache(),
    });

    const { data } = await client.query({
      query: GET_ALL_POSTS,
      variables: {
        limit: 3,
        start: posts.length,
      },
    });

    if (data.events.data.length > 0) {
      setPosts((prevPosts) => [...prevPosts, ...data.events.data]);
    } else {
      setHasMore(false);
    }
  }

  return (
    <div>
      <Head>
        <title>My blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>Welcome to the CoderBlog</h1>
      <p>
        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin eu metus
        turpis. Cras posuere blandit erat, eu maximus erat rutrum ac. Aenean
        suscipit et ligula nec feugiat. Sed maximus purus nunc, ut sagittis
        neque placerat ac.
      </p>
      <br />
      <h2>All posts</h2>
      <br />
      <InfiniteScroll
        dataLength={posts.length}
        next={fetchPosts}
        hasMore={hasMore}
        loader={<h4>Loading...</h4>}
        scrollThreshold={0.9}
        endMessage={
          <p style={{ textAlign: "center" }}>
            <b>Yay! You have seen it all</b>
          </p>
        }
      >
        {posts.map((val, i) => {
          return (
            <Link key={i} href={val.attributes.slug}>
              <a>
                <div className="card">
                  <h3>{val.attributes.title}</h3>
                  <p>{val.attributes.description}</p>
                </div>
              </a>
            </Link>
          );
        })}
      </InfiniteScroll>
    </div>
  );
}
